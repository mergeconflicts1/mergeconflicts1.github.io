<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title></title>
        <description>흠 허허허  multipurpose blog theme for Jekyll</description>
        <link>http://localhost:4000/</link>
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 12 Jun 2023 18:45:15 +0900</pubDate>
        <lastBuildDate>Mon, 12 Jun 2023 18:45:15 +0900</lastBuildDate>
        <generator>Jekyll v4.3.2</generator>
        
            <item>
                <title>변경사항 되돌리기 (reset)</title>
                <description>&lt;h3 id=&quot;1-설명&quot;&gt;1. 설명&lt;/h3&gt;

&lt;p&gt;리셋은 되돌아가고 싶은 커밋을 선택했을 때, 선택된 이후의 모든 커밋 이력을 제거함으로써 이력을 되돌립니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 [그림 7-1]을 보면 HEAD는 C11입니다. HEAD를 C8으로 되돌리기 위해 C8로 리셋을 수행하면 이력 C8 이후에 남겼던 이력 C9, C10, C11이 모두 커밋 히스토리에서 사라지게 됩니다.&lt;/p&gt;

&lt;p&gt;이렇게 리셋을 수행하면 C9, C10, C11는 전부 삭제되는 것일까요?&lt;/p&gt;

&lt;p&gt;아닙니다! 리셋을 수행할때는 커밋 히스토리에서 제거되는 커밋을 어떻게 처리할지 지정할 수 있습니다. 지정할 수 있는 옵션은 아래 [그림 7-2]와 같이 soft, mixed, hard 총 세 가지 가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 옵션별 동작은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;soft: 이력에서 제거하고 내용을 인덱스에 둡니다.&lt;/li&gt;
  &lt;li&gt;mixed: 이력에서 제거된 내용을 작업 디렉토리에 변경됨 상태로 둡니다.&lt;/li&gt;
  &lt;li&gt;hard: 이력에서 제거된 내용을 완전히 제거합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;리셋은 뒤에서 다룰 리버트와 달리 기존의 이력을 제거하고 변경사항을 영구적으로 되돌립 니다. 특히 hard 옵션은 사용하는데 주의를 기울여야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[주 의]&lt;/p&gt;

  &lt;p&gt;이미 원격저장소에 푸시(Push)된 적이 있는 이력을 리셋을 사용해 되돌리면 변경사항을 푸시할 때 로컬저장소의 상태와 원격저장소의 상태가 맞지 않아 에러가 발생합니다. 그렇기 때문에 리셋은 일반적으로 원격저장소에 푸시된 적이 없는 로컬저장소의 작업을 되돌릴 때 사용해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-소스트리에서-사용하기&quot;&gt;2. 소스트리에서 사용하기&lt;/h3&gt;

&lt;p&gt;앞에서 배운 내용을 실제 소스트리에서 사용하는 법을 알아보도록 하겠습니다. 지금 하려고 하는 작업은 저장소에 추가된 기능 중 무인주행 관련 기능을 제거하는 것입니다. 리셋을 사용해 무인주행 관련 기능을 제거해 보겠습니다. 리셋을 시작하기 전 먼저 현재 저장소의 상태를 살펴보겠습니다.&lt;/p&gt;

&lt;p&gt;현재 저장소 상태는 아래 [그림 7-3] 과 같이 HEAD는 master 브랜치의 “11. 무인 주행 성 능 개선” (이하 11번 커밋)이라는 커밋을 가리키고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;커밋 히스토리를 살펴보면 무인주행 관련 기능은 커밋메시지 9번부터 11번 까지입니다. 이 커밋을 저장소에서 제거하기 위해서는 “8. 기본 주행 시뮬레이션 가능하도록 구현” 이라는 커밋 이후의 이력을 커밋 히스토리에서 제거해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;리셋을 수행 하기 위해 위 [그림7-4] 와 같이 8번 커밋 메시지 선택하고 마우스 오른쪽 버튼 클릭한 후 “Reset master to this commit” 메뉴를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;메뉴를 선택하면 위 [그림 7-5]와 같이 확인 팝업이 노출돼서 리셋에 사용할 모드를 선택할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디폴트는 Mixed입니다. 리셋의 모드는 위 [그림 7-6] 처럼 Soft, Mixed, Hard 세 가지 중 하나를 선택할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;21-soft&quot;&gt;2.1 Soft&lt;/h4&gt;

&lt;p&gt;첫번째로 Soft 모드를 선택해 리셋을 해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 [그림7-7]과 같이 8번 커밋으로 리셋을 실행한 후 리셋 옵션 선택 화면에서 Soft 모드를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;리셋이 완료되면 8번 커밋으로 리셋 됐기 때문에 8번 이후 커밋인 9, 10, 11번 커밋은 커밋 히스토리에서 제거 됐습니다. 리셋 수행시 모드를 Soft로 지정했기 때문에 리셋으로 인해 히 스토리에서 제거된 변경 사항은 아래 [그림 7-9]와 같이 인덱스에 남아있게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;22-mixed&quot;&gt;2.2 Mixed&lt;/h4&gt;

&lt;p&gt;두번째로 Mixed 모드를 선택해 리셋을 해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;앞과 동일하게 [그림7-10]과 같이 8번 커밋으로 리셋을 실행한 후 리셋 옵션 선택 화면에서 Mixed 모드를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;리셋이 완료되면 8번 커밋으로 리셋 됐기 때문에 8번 이후 커밋인 9, 10, 11번 커밋은 커밋 히 스토리에서 제거 됐습니다. 리셋 수행시 모드를 Mixed로 지정했기 때문에 리셋으로 인해 히 스토리에서 제거된 변경 사항은 아래 [그림 7-12]와 같이 작업 디렉토리에 남아있게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;23-hard&quot;&gt;2.3 Hard&lt;/h4&gt;

&lt;p&gt;마지막으로 Hard 모드를 선택해 리셋을 해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;앞과 동일하게 [그림7-13]과 같이 8번 커밋으로 리셋을 실행한 후 리셋 옵션 선택 화면에서 Hard 모드를 선택합니다.
&lt;img src=&quot;/images/GitBook/fig7-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;리셋이 완료되면 8번 커밋으로 리셋 됐기 때문에 8번 이후 커밋인 9, 10, 11번 커밋은 커밋 히스토리에서 제거 됐습니다. 리셋 수행시 모드를 Hard로 지정했기 때문에 리셋으로 인해 히스토리에서 제거된 변경 사항은 아래 [그림 7-15]와 같이 인덱스와 작업 디렉토리 그 어떤 곳에도 남아있지 않고 완전히 사라졌습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/GitBook/fig7-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
                <pubDate>Thu, 27 Apr 2023 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/reset</link>
                <guid isPermaLink="true">http://localhost:4000/blog/reset</guid>
                
                <category>undo</category>
                
                <category>reset</category>
                
                <category>post</category>
                
                
            </item>
        
            <item>
                <title>Git 책 추천</title>
                <description>&lt;p&gt;Git 관련해서 시중에 나와 있는 책 참 많죠?&lt;/p&gt;

&lt;p&gt;많은 책 중에 어떤 책을 읽어야 할까요?&lt;/p&gt;

&lt;p&gt;저는 Git 책을 쓰기 위해 20권 이상의 Git 책을 읽었는데요.&lt;/p&gt;

&lt;p&gt;이번 영상에서는 제가 읽었던 책 중에서 두드러지게 좋았던 Git 책 몇 권을 소개해 드리겠습니다.&lt;/p&gt;

&lt;p&gt;[무료책 다운로드 링크]&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/progit/progit2-ko/releases/download/2.1.79/progit.pdf&quot;&gt;Pro Git(한국어)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pluralsight/git-internals-pdf/raw/master/drafts/peepcode-git.pdf&quot;&gt;Git Internals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 01 Nov 2022 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/in-three-words-i-can-sum-up-everything-i-ve-learned-about-life-it-goes-on</link>
                <guid isPermaLink="true">http://localhost:4000/blog/in-three-words-i-can-sum-up-everything-i-ve-learned-about-life-it-goes-on</guid>
                
                <category>video</category>
                
                <category>book</category>
                
                
            </item>
        
            <item>
                <title>리셋과 리버트(Reset &amp; Revert)</title>
                <description>&lt;p&gt;Git에서 변경사항을 되돌리는 방법인 리셋과 리버트에 대해 설명합니다.
Git에서 변경 사항을 되돌리는 방법을 이해해 두면 실수로 커밋을 하더라도 언제든지 이전 상태로 되돌릴 수 있기 때문에 좀 더 마음 편하게 Git을 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;[챕터]&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3ehFeHkFj18&amp;amp;t=0s&quot;&gt;0:00&lt;/a&gt; - 리셋 이론&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3ehFeHkFj18&amp;amp;t=112s&quot;&gt;1:52&lt;/a&gt; - 리셋 실습 (소스트리)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3ehFeHkFj18&amp;amp;t=184s&quot;&gt;3:04&lt;/a&gt; - 리버트 이론&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3ehFeHkFj18&amp;amp;t=356s&quot;&gt;5:56&lt;/a&gt; - 리버트 실습 - 소스트리&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 25 Oct 2022 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/resetrevert-video</link>
                <guid isPermaLink="true">http://localhost:4000/blog/resetrevert-video</guid>
                
                <category>reset</category>
                
                <category>revert</category>
                
                <category>undo</category>
                
                <category>video</category>
                
                
            </item>
        
            <item>
                <title>머지 (Fast-Foward &amp; 3Way 머지)</title>
                <description>&lt;p&gt;Git에서 제공하는 두 가지 머지 방식인 Fast-Forward 머지와 3Way 머지에 대해 설명합니다. Fast-Forward 머지를 보다 자세히 설명하기 위해 브랜치 정의에 대한 내용도 포함하고 있습니다.&lt;/p&gt;

&lt;p&gt;[챕터]&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U21VGceuVgI&amp;amp;t=0s&quot;&gt;0:00&lt;/a&gt; - Fast Forward 머지&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U21VGceuVgI&amp;amp;t=79s&quot;&gt;1:19&lt;/a&gt; - 브랜치의 정의&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U21VGceuVgI&amp;amp;t=204s&quot;&gt;3:24&lt;/a&gt; - 3Way 머지&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 18 Oct 2022 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/merge-video</link>
                <guid isPermaLink="true">http://localhost:4000/blog/merge-video</guid>
                
                <category>merge</category>
                
                <category>video</category>
                
                
            </item>
        
            <item>
                <title>커밋의 해시와 DAG (Commit Hash &amp; DAG)</title>
                <description>&lt;p&gt;Git이 커밋의 해시를 어떻게 생성하는지와 Git에서 사용하는 자료구조인 DAG(Directed Acyclic Graph)에 대해 설명합니다. 이 부분은 Git은 다른 명령의 동작의 이해를 돕는 내용을 포함하고 있기 때문에 한번 봐두시는 것을 권해드립니다.&lt;/p&gt;

&lt;p&gt;[챕터]&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KJpVl9IMEtc&amp;amp;t=0s&quot;&gt;0:00&lt;/a&gt; - 커밋의 구성요소&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KJpVl9IMEtc&amp;amp;t=39s&quot;&gt;0:39&lt;/a&gt; - 커밋 해시의 생성 방법과 용도&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KJpVl9IMEtc&amp;amp;t=138s&quot;&gt;2:18&lt;/a&gt; - 커밋의 부모&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KJpVl9IMEtc&amp;amp;t=150s&quot;&gt;2:30&lt;/a&gt; - DAG(Directed Acyclic Graph)&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 11 Oct 2022 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/commit-hash-video</link>
                <guid isPermaLink="true">http://localhost:4000/blog/commit-hash-video</guid>
                
                <category>commit</category>
                
                <category>video</category>
                
                
            </item>
        
            <item>
                <title>리베이스 (Git Rebase)</title>
                <description>&lt;p&gt;Git Rebase에 대한 기본 개념과 활용 방법을 소개합니다. 소스트리에서 사용하는 법도 뒤에 첨부했습니다.&lt;/p&gt;

&lt;p&gt;[챕터]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mzFnlitw4SQ&amp;amp;t=0s&quot;&gt;0:00&lt;/a&gt; 리베이스 이론&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mzFnlitw4SQ&amp;amp;t=270s&quot;&gt;4:30&lt;/a&gt; 리베이스 실습 - 소스트리&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mzFnlitw4SQ&amp;amp;t=323s&quot;&gt;5:23&lt;/a&gt; - 인터렉티브 리베이스 이론&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mzFnlitw4SQ&amp;amp;t=398s&quot;&gt;6:38&lt;/a&gt; - 인터렉티브 리베이스 실습 - 소스트리&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 04 Oct 2022 15:01:35 +0900</pubDate>
                <link>http://localhost:4000/blog/rebase-video</link>
                <guid isPermaLink="true">http://localhost:4000/blog/rebase-video</guid>
                
                <category>rebase</category>
                
                <category>video</category>
                
                
            </item>
        
    </channel>
</rss>